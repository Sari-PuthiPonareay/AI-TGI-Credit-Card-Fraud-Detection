{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"k9lOF4PkUZx5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954297699,"user_tz":-420,"elapsed":848277,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"a8a270f0-7261-48ea-d1e3-163061807f2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YXWD1-fVZGxa"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns"]},{"cell_type":"code","source":["# this is my path to this folder\n","# !ls 'drive/MyDrive/TGI_AI_2022-2023/AI103/AI103 Final Project'\n","!ls 'drive/MyDrive/data'\n","#!ls 'drive/MyDrive/PythonForAI'"],"metadata":{"id":"QJJbmrIpUmgs","executionInfo":{"status":"ok","timestamp":1667954298614,"user_tz":-420,"elapsed":412,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"5a897bdb-1568-4329-b43f-5a5a512e7d22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ls: cannot access 'drive/MyDrive/TGI_AIdata': No such file or directory\n"]}]},{"cell_type":"code","source":["# IMPORT DATASET\n","data_train = pd.read_csv(PATH + '/fraudTrain.csv')\n","data_test = pd.read_csv(PATH + '/fraudTest.csv')"],"metadata":{"id":"JJuM4lwZVFjr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f'Train samples: {data_train.shape}')\n","print(f'Test samples: {data_test.shape}')"],"metadata":{"id":"XGw9JGSZ3OAs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954645653,"user_tz":-420,"elapsed":51,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"b3e09967-cb10-465a-d3b5-d41e9da2af65"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train samples: (1296675, 23)\n","Test samples: (555719, 23)\n"]}]},{"cell_type":"code","source":["print(f'There are {len(data_train.columns)} features: {data_train.columns}')"],"metadata":{"id":"ksKoPVGTVaRI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954645654,"user_tz":-420,"elapsed":23,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"a520aa3d-8bb6-4ad0-8df5-05c3af79486f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 23 features: Index(['Unnamed: 0', 'trans_date_trans_time', 'cc_num', 'merchant', 'category',\n","       'amt', 'first', 'last', 'gender', 'street', 'city', 'state', 'zip',\n","       'lat', 'long', 'city_pop', 'job', 'dob', 'trans_num', 'unix_time',\n","       'merch_lat', 'merch_long', 'is_fraud'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["data_test.head()"],"metadata":{"id":"6JWFMqnYVq2C","colab":{"base_uri":"https://localhost:8080/","height":525},"executionInfo":{"status":"ok","timestamp":1667954645655,"user_tz":-420,"elapsed":17,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"a756095e-d968-4b54-e313-b70639f72434"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0 trans_date_trans_time            cc_num  \\\n","0           0   2020-06-21 12:14:25  2291163933867244   \n","1           1   2020-06-21 12:14:33  3573030041201292   \n","2           2   2020-06-21 12:14:53  3598215285024754   \n","3           3   2020-06-21 12:15:15  3591919803438423   \n","4           4   2020-06-21 12:15:17  3526826139003047   \n","\n","                               merchant        category    amt   first  \\\n","0                 fraud_Kirlin and Sons   personal_care   2.86    Jeff   \n","1                  fraud_Sporer-Keebler   personal_care  29.84  Joanne   \n","2  fraud_Swaniawski, Nitzsche and Welch  health_fitness  41.28  Ashley   \n","3                     fraud_Haley Group        misc_pos  60.05   Brian   \n","4                 fraud_Johnston-Casper          travel   3.19  Nathan   \n","\n","       last gender                       street  ...      lat      long  \\\n","0   Elliott      M            351 Darlene Green  ...  33.9659  -80.9355   \n","1  Williams      F             3638 Marsh Union  ...  40.3207 -110.4360   \n","2     Lopez      F         9333 Valentine Point  ...  40.6729  -73.5365   \n","3  Williams      M  32941 Krystal Mill Apt. 552  ...  28.5697  -80.8191   \n","4    Massey      M     5783 Evan Roads Apt. 465  ...  44.2529  -85.0170   \n","\n","   city_pop                     job         dob  \\\n","0    333497     Mechanical engineer  1968-03-19   \n","1       302  Sales professional, IT  1990-01-17   \n","2     34496       Librarian, public  1970-10-21   \n","3     54767            Set designer  1987-07-25   \n","4      1126      Furniture designer  1955-07-06   \n","\n","                          trans_num   unix_time  merch_lat  merch_long  \\\n","0  2da90c7d74bd46a0caf3777415b3ebd3  1371816865  33.986391  -81.200714   \n","1  324cc204407e99f51b0d6ca0055005e7  1371816873  39.450498 -109.960431   \n","2  c81755dbbbea9d5c77f094348a7579be  1371816893  40.495810  -74.196111   \n","3  2159175b9efe66dc301f149d3d5abf8c  1371816915  28.812398  -80.883061   \n","4  57ff021bd3f328f8738bb535c302a31b  1371816917  44.959148  -85.884734   \n","\n","   is_fraud  \n","0         0  \n","1         0  \n","2         0  \n","3         0  \n","4         0  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-7c94c802-7b0c-42dd-b4f6-c9d157cc1de9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>trans_date_trans_time</th>\n","      <th>cc_num</th>\n","      <th>merchant</th>\n","      <th>category</th>\n","      <th>amt</th>\n","      <th>first</th>\n","      <th>last</th>\n","      <th>gender</th>\n","      <th>street</th>\n","      <th>...</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>city_pop</th>\n","      <th>job</th>\n","      <th>dob</th>\n","      <th>trans_num</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2020-06-21 12:14:25</td>\n","      <td>2291163933867244</td>\n","      <td>fraud_Kirlin and Sons</td>\n","      <td>personal_care</td>\n","      <td>2.86</td>\n","      <td>Jeff</td>\n","      <td>Elliott</td>\n","      <td>M</td>\n","      <td>351 Darlene Green</td>\n","      <td>...</td>\n","      <td>33.9659</td>\n","      <td>-80.9355</td>\n","      <td>333497</td>\n","      <td>Mechanical engineer</td>\n","      <td>1968-03-19</td>\n","      <td>2da90c7d74bd46a0caf3777415b3ebd3</td>\n","      <td>1371816865</td>\n","      <td>33.986391</td>\n","      <td>-81.200714</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2020-06-21 12:14:33</td>\n","      <td>3573030041201292</td>\n","      <td>fraud_Sporer-Keebler</td>\n","      <td>personal_care</td>\n","      <td>29.84</td>\n","      <td>Joanne</td>\n","      <td>Williams</td>\n","      <td>F</td>\n","      <td>3638 Marsh Union</td>\n","      <td>...</td>\n","      <td>40.3207</td>\n","      <td>-110.4360</td>\n","      <td>302</td>\n","      <td>Sales professional, IT</td>\n","      <td>1990-01-17</td>\n","      <td>324cc204407e99f51b0d6ca0055005e7</td>\n","      <td>1371816873</td>\n","      <td>39.450498</td>\n","      <td>-109.960431</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2020-06-21 12:14:53</td>\n","      <td>3598215285024754</td>\n","      <td>fraud_Swaniawski, Nitzsche and Welch</td>\n","      <td>health_fitness</td>\n","      <td>41.28</td>\n","      <td>Ashley</td>\n","      <td>Lopez</td>\n","      <td>F</td>\n","      <td>9333 Valentine Point</td>\n","      <td>...</td>\n","      <td>40.6729</td>\n","      <td>-73.5365</td>\n","      <td>34496</td>\n","      <td>Librarian, public</td>\n","      <td>1970-10-21</td>\n","      <td>c81755dbbbea9d5c77f094348a7579be</td>\n","      <td>1371816893</td>\n","      <td>40.495810</td>\n","      <td>-74.196111</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2020-06-21 12:15:15</td>\n","      <td>3591919803438423</td>\n","      <td>fraud_Haley Group</td>\n","      <td>misc_pos</td>\n","      <td>60.05</td>\n","      <td>Brian</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>32941 Krystal Mill Apt. 552</td>\n","      <td>...</td>\n","      <td>28.5697</td>\n","      <td>-80.8191</td>\n","      <td>54767</td>\n","      <td>Set designer</td>\n","      <td>1987-07-25</td>\n","      <td>2159175b9efe66dc301f149d3d5abf8c</td>\n","      <td>1371816915</td>\n","      <td>28.812398</td>\n","      <td>-80.883061</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2020-06-21 12:15:17</td>\n","      <td>3526826139003047</td>\n","      <td>fraud_Johnston-Casper</td>\n","      <td>travel</td>\n","      <td>3.19</td>\n","      <td>Nathan</td>\n","      <td>Massey</td>\n","      <td>M</td>\n","      <td>5783 Evan Roads Apt. 465</td>\n","      <td>...</td>\n","      <td>44.2529</td>\n","      <td>-85.0170</td>\n","      <td>1126</td>\n","      <td>Furniture designer</td>\n","      <td>1955-07-06</td>\n","      <td>57ff021bd3f328f8738bb535c302a31b</td>\n","      <td>1371816917</td>\n","      <td>44.959148</td>\n","      <td>-85.884734</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c94c802-7b0c-42dd-b4f6-c9d157cc1de9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7c94c802-7b0c-42dd-b4f6-c9d157cc1de9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7c94c802-7b0c-42dd-b4f6-c9d157cc1de9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data_train.describe()"],"metadata":{"id":"AwYQQKMGCgth","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1667954646543,"user_tz":-420,"elapsed":903,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"36d97acd-51c2-4d42-b9fa-014cd8e057c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Unnamed: 0        cc_num           amt           zip           lat  \\\n","count  1.296675e+06  1.296675e+06  1.296675e+06  1.296675e+06  1.296675e+06   \n","mean   6.483370e+05  4.171920e+17  7.035104e+01  4.880067e+04  3.853762e+01   \n","std    3.743180e+05  1.308806e+18  1.603160e+02  2.689322e+04  5.075808e+00   \n","min    0.000000e+00  6.041621e+10  1.000000e+00  1.257000e+03  2.002710e+01   \n","25%    3.241685e+05  1.800429e+14  9.650000e+00  2.623700e+04  3.462050e+01   \n","50%    6.483370e+05  3.521417e+15  4.752000e+01  4.817400e+04  3.935430e+01   \n","75%    9.725055e+05  4.642255e+15  8.314000e+01  7.204200e+04  4.194040e+01   \n","max    1.296674e+06  4.992346e+18  2.894890e+04  9.978300e+04  6.669330e+01   \n","\n","               long      city_pop     unix_time     merch_lat    merch_long  \\\n","count  1.296675e+06  1.296675e+06  1.296675e+06  1.296675e+06  1.296675e+06   \n","mean  -9.022634e+01  8.882444e+04  1.349244e+09  3.853734e+01 -9.022646e+01   \n","std    1.375908e+01  3.019564e+05  1.284128e+07  5.109788e+00  1.377109e+01   \n","min   -1.656723e+02  2.300000e+01  1.325376e+09  1.902779e+01 -1.666712e+02   \n","25%   -9.679800e+01  7.430000e+02  1.338751e+09  3.473357e+01 -9.689728e+01   \n","50%   -8.747690e+01  2.456000e+03  1.349250e+09  3.936568e+01 -8.743839e+01   \n","75%   -8.015800e+01  2.032800e+04  1.359385e+09  4.195716e+01 -8.023680e+01   \n","max   -6.795030e+01  2.906700e+06  1.371817e+09  6.751027e+01 -6.695090e+01   \n","\n","           is_fraud  \n","count  1.296675e+06  \n","mean   5.788652e-03  \n","std    7.586269e-02  \n","min    0.000000e+00  \n","25%    0.000000e+00  \n","50%    0.000000e+00  \n","75%    0.000000e+00  \n","max    1.000000e+00  "],"text/html":["\n","  <div id=\"df-c8c8e9c2-9c53-4c2c-81af-c94174589228\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>cc_num</th>\n","      <th>amt</th>\n","      <th>zip</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>city_pop</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","      <td>1.296675e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>6.483370e+05</td>\n","      <td>4.171920e+17</td>\n","      <td>7.035104e+01</td>\n","      <td>4.880067e+04</td>\n","      <td>3.853762e+01</td>\n","      <td>-9.022634e+01</td>\n","      <td>8.882444e+04</td>\n","      <td>1.349244e+09</td>\n","      <td>3.853734e+01</td>\n","      <td>-9.022646e+01</td>\n","      <td>5.788652e-03</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.743180e+05</td>\n","      <td>1.308806e+18</td>\n","      <td>1.603160e+02</td>\n","      <td>2.689322e+04</td>\n","      <td>5.075808e+00</td>\n","      <td>1.375908e+01</td>\n","      <td>3.019564e+05</td>\n","      <td>1.284128e+07</td>\n","      <td>5.109788e+00</td>\n","      <td>1.377109e+01</td>\n","      <td>7.586269e-02</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>6.041621e+10</td>\n","      <td>1.000000e+00</td>\n","      <td>1.257000e+03</td>\n","      <td>2.002710e+01</td>\n","      <td>-1.656723e+02</td>\n","      <td>2.300000e+01</td>\n","      <td>1.325376e+09</td>\n","      <td>1.902779e+01</td>\n","      <td>-1.666712e+02</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.241685e+05</td>\n","      <td>1.800429e+14</td>\n","      <td>9.650000e+00</td>\n","      <td>2.623700e+04</td>\n","      <td>3.462050e+01</td>\n","      <td>-9.679800e+01</td>\n","      <td>7.430000e+02</td>\n","      <td>1.338751e+09</td>\n","      <td>3.473357e+01</td>\n","      <td>-9.689728e+01</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.483370e+05</td>\n","      <td>3.521417e+15</td>\n","      <td>4.752000e+01</td>\n","      <td>4.817400e+04</td>\n","      <td>3.935430e+01</td>\n","      <td>-8.747690e+01</td>\n","      <td>2.456000e+03</td>\n","      <td>1.349250e+09</td>\n","      <td>3.936568e+01</td>\n","      <td>-8.743839e+01</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>9.725055e+05</td>\n","      <td>4.642255e+15</td>\n","      <td>8.314000e+01</td>\n","      <td>7.204200e+04</td>\n","      <td>4.194040e+01</td>\n","      <td>-8.015800e+01</td>\n","      <td>2.032800e+04</td>\n","      <td>1.359385e+09</td>\n","      <td>4.195716e+01</td>\n","      <td>-8.023680e+01</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.296674e+06</td>\n","      <td>4.992346e+18</td>\n","      <td>2.894890e+04</td>\n","      <td>9.978300e+04</td>\n","      <td>6.669330e+01</td>\n","      <td>-6.795030e+01</td>\n","      <td>2.906700e+06</td>\n","      <td>1.371817e+09</td>\n","      <td>6.751027e+01</td>\n","      <td>-6.695090e+01</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8c8e9c2-9c53-4c2c-81af-c94174589228')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c8c8e9c2-9c53-4c2c-81af-c94174589228 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c8c8e9c2-9c53-4c2c-81af-c94174589228');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["# Data Exploratory Analysis"],"metadata":{"id":"Izu7AH0wqgZp"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"kIyXoVdL4X8u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_test.isnull().sum()"],"metadata":{"id":"rAXc9MvLbeDW","executionInfo":{"status":"ok","timestamp":1667954647058,"user_tz":-420,"elapsed":518,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"82a329de-9fde-40f9-a560-7eb5fb042083"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0               0\n","trans_date_trans_time    0\n","cc_num                   0\n","merchant                 0\n","category                 0\n","amt                      0\n","first                    0\n","last                     0\n","gender                   0\n","street                   0\n","city                     0\n","state                    0\n","zip                      0\n","lat                      0\n","long                     0\n","city_pop                 0\n","job                      0\n","dob                      0\n","trans_num                0\n","unix_time                0\n","merch_lat                0\n","merch_long               0\n","is_fraud                 0\n","dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["data_train.isnull().sum()"],"metadata":{"id":"VHcNa_tAKajR","executionInfo":{"status":"ok","timestamp":1667954647855,"user_tz":-420,"elapsed":800,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"38538b02-9968-460c-9aa4-bfe157c281b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0               0\n","trans_date_trans_time    0\n","cc_num                   0\n","merchant                 0\n","category                 0\n","amt                      0\n","first                    0\n","last                     0\n","gender                   0\n","street                   0\n","city                     0\n","state                    0\n","zip                      0\n","lat                      0\n","long                     0\n","city_pop                 0\n","job                      0\n","dob                      0\n","trans_num                0\n","unix_time                0\n","merch_lat                0\n","merch_long               0\n","is_fraud                 0\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#Show Column\n","data_train.columns"],"metadata":{"id":"v-6yXEU7J1tD","executionInfo":{"status":"ok","timestamp":1667954647856,"user_tz":-420,"elapsed":21,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"db221e41-41df-4070-8455-90f933f0da78"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'trans_date_trans_time', 'cc_num', 'merchant', 'category',\n","       'amt', 'first', 'last', 'gender', 'street', 'city', 'state', 'zip',\n","       'lat', 'long', 'city_pop', 'job', 'dob', 'trans_num', 'unix_time',\n","       'merch_lat', 'merch_long', 'is_fraud'],\n","      dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["sample = data_train.head(10000)"],"metadata":{"id":"wwheQ60-oibU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#distribution plot\n","sns.countplot(data = sample, x = 'is_fraud')"],"metadata":{"id":"cHT-LdU6KkVi","executionInfo":{"status":"ok","timestamp":1667954648166,"user_tz":-420,"elapsed":324,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":298},"outputId":"95bba247-9f1b-4698-f984-34802b33640c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f59642ba290>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"I26ovbvoLd4y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Show Relationship between amt and is_fraud\n","sns.countplot(data = sample, x = 'state', hue='is_fraud')"],"metadata":{"id":"7AOTmPO4Ly4h","executionInfo":{"status":"ok","timestamp":1667954648937,"user_tz":-420,"elapsed":783,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":297},"outputId":"79d21a8b-8fd2-426b-ce14-76e367cbc384"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f595e230450>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Show Relationship between amt and is_fraud\n","sns.countplot(data = sample, x = 'category', hue='is_fraud')"],"metadata":{"id":"_HOxr1bdP_5j","executionInfo":{"status":"ok","timestamp":1667954649478,"user_tz":-420,"elapsed":551,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":298},"outputId":"67c69b09-af39-4132-a200-f266a27ac9da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f595df778d0>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["h_map = sample.corr()\n","plt.figure(figsize= (12, 10))\n","sns.heatmap(h_map)"],"metadata":{"id":"90xmJuZBd3Oj","executionInfo":{"status":"ok","timestamp":1667954650341,"user_tz":-420,"elapsed":464,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":665},"outputId":"b903e189-0e4c-47c0-8924-dcc0f98df5dd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f595df66910>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["columns = h_map.nlargest(10, 'amt').index\n","h_map2 = sample[columns].corr()\n","plt.figure(figsize= (12, 10))\n","sns.heatmap(h_map2, annot = True)"],"metadata":{"id":"Fy8t-aZVR5Jo","executionInfo":{"status":"ok","timestamp":1667954651396,"user_tz":-420,"elapsed":1061,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":665},"outputId":"c37930a1-704f-4a41-a0a7-522baaa324ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f595dee8990>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Data Processing\n"],"metadata":{"id":"_6ltlNYtolcJ"}},{"cell_type":"markdown","source":["Remove punctuation from string"],"metadata":{"id":"A4qs8HVVPNxC"}},{"cell_type":"code","source":["punctuations = '''!()-[]{};:'\"\\,<>./?@#$%^&*_~'''\n","my_str = \"HEllo, he said ---and went.\"\n","\n","# remove punctuation from the string\n","no_punct = \"\"\n","for char in my_str:\n","  if(char not in punctuations):\n","    no_punct = no_punct + char"],"metadata":{"id":"VPwEMFobPVUR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import re\n","s = \"string. with. punctuation?\"\n","s = re.sub(r'[^\\w\\s]','',s)"],"metadata":{"id":"H8MY52UdPj2M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["s"],"metadata":{"id":"1PycGhfPPk3G","colab":{"base_uri":"https://localhost:8080/","height":37},"executionInfo":{"status":"ok","timestamp":1667954651400,"user_tz":-420,"elapsed":18,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"446963fa-de5b-4331-e538-8e6839f8103a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'string with punctuation'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["import nltk\n","nltk.download('punkt')\n","nltk.download('wordnet')"],"metadata":{"id":"87yVPqsRPlzP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954653086,"user_tz":-420,"elapsed":1701,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"e2f8ca28-58a3-4b54-a3ca-4c536e185b68"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["nltk.word_tokenize(\"HI how are you\")"],"metadata":{"id":"MRP9v0j3PpQW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954653087,"user_tz":-420,"elapsed":37,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"b5e10b39-de5f-44f5-f4e3-31e848e3aed7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['HI', 'how', 'are', 'you']"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["import nltk\n","nltk.download('stopwords')\n","nltk.download('worknet')\n","from nltk.corpus import stopwords\n","stop_words = stopwords.words('english')\n","print(stop_words)"],"metadata":{"id":"BFRgQBJ4PsXe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954653088,"user_tz":-420,"elapsed":30,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"0c763137-93d8-4d9f-b0fb-13bc859c11df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n"]},{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Error loading worknet: Package 'worknet' not found in\n","[nltk_data]     index\n"]}]},{"cell_type":"code","source":["#add or remove stop words\n","stop_words.append('works')"],"metadata":{"id":"CUnXmvYzPwY-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from nltk.stem import PorterStemmer\n","from nltk.tokenize import word_tokenize\n","Stemmer = PorterStemmer()\n","input_str = \"There are several types of stemming algorthms.\"\n","input_str = nltk.word_tokenize(input_str)\n","for word in input_str:\n","  print(Stemmer.stem(word))"],"metadata":{"id":"CHP9ueYlPyqt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954653090,"user_tz":-420,"elapsed":24,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"2602a3ca-7bdb-49d5-dd0e-0babc396023d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["there\n","are\n","sever\n","type\n","of\n","stem\n","algorthm\n",".\n"]}]},{"cell_type":"code","source":["import nltk\n","nltk.download('omw-1.4')\n","from nltk.stem import WordNetLemmatizer\n","lemmatizer = WordNetLemmatizer()\n","input_str=\"been in the cities finding mice\"\n","input_str = nltk.word_tokenize(input_str)\n","for word in input_str:\n","  print(lemmatizer.lemmatize(word))"],"metadata":{"id":"ymKlBsToP1qe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954655391,"user_tz":-420,"elapsed":2317,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"69912c12-c76c-40ff-8b28-ead227f04911"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package omw-1.4 to /root/nltk_data...\n"]},{"output_type":"stream","name":"stdout","text":["been\n","in\n","the\n","city\n","finding\n","mouse\n"]}]},{"cell_type":"markdown","source":["Apply Preprocessing on Dataset"],"metadata":{"id":"4uq9sPqEP_fO"}},{"cell_type":"code","source":["data_train['is_fraud'][0:10]"],"metadata":{"id":"58Io8nTyaoL0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954655392,"user_tz":-420,"elapsed":14,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"2c21fe22-08d9-4faa-ca88-8ef80bed9262"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    0\n","1    0\n","2    0\n","3    0\n","4    0\n","5    0\n","6    0\n","7    0\n","8    0\n","9    0\n","Name: is_fraud, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["fraud_index = data_train.index[data_train['is_fraud'] == 1]\n","not_fraud_index = data_train.index[data_train['is_fraud'] == 0]\n","\n","sample = pd.concat([data_train.iloc[fraud_index], data_train.iloc[not_fraud_index[:len(fraud_index)]]])\n","sample.reset_index()\n","sns.countplot(data=sample, x='is_fraud')"],"metadata":{"id":"adqeaPuCO8Eh","colab":{"base_uri":"https://localhost:8080/","height":298},"executionInfo":{"status":"ok","timestamp":1667954656059,"user_tz":-420,"elapsed":673,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"37d0fcbe-7e75-406b-c92e-c1b7863040cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f595b43eb50>"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sample['category'].unique()"],"metadata":{"id":"tDHDiBAt5_I1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954656061,"user_tz":-420,"elapsed":19,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"da170cba-c7cc-49d7-c753-33cc26512616"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['grocery_pos', 'gas_transport', 'shopping_net', 'misc_net',\n","       'shopping_pos', 'travel', 'grocery_net', 'misc_pos',\n","       'health_fitness', 'kids_pets', 'entertainment', 'food_dining',\n","       'home', 'personal_care'], dtype=object)"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["for index,row in sample.iterrows():\n","  filter_sentence = []\n","  sentence = row['category'][0:10]\n","  sentence = re.sub(r'[^\\w\\s]','',sentence) # cleaning\n","  words = nltk.word_tokenize(sentence) # tokenization\n","  words = [w for w in words if not w in stop_words] # stopwords remove\n","  for words in words:\n","    filter_sentence.append(lemmatizer.lemmatize(word))\n","    #print(filter_sentence)\n","    sample.at[index,'category'] = filter_sentence\n"],"metadata":{"id":"X_vDCIyvPcLT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(filter_sentence)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C5mYP87Y7_z9","executionInfo":{"status":"ok","timestamp":1667954661367,"user_tz":-420,"elapsed":92,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"1ba2b51d-14ef-4b3b-f141-62923b35b308"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['mouse']\n"]}]},{"cell_type":"code","source":["sample['category']"],"metadata":{"id":"mlPIf2UE6EWQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667957024011,"user_tz":-420,"elapsed":8,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"b28a3736-2c10-4c56-9a57-b8d067007bbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2449    [mouse]\n","2472    [mouse]\n","2523    [mouse]\n","2546    [mouse]\n","2553    [mouse]\n","         ...   \n","7541    [mouse]\n","7542    [mouse]\n","7543    [mouse]\n","7544    [mouse]\n","7545    [mouse]\n","Name: category, Length: 15012, dtype: object"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["print(f'There are {len(data_train.columns)} features: {data_train.columns}')"],"metadata":{"id":"37o2T5QAXhco","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954661370,"user_tz":-420,"elapsed":71,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"f5917937-b01c-4edf-8141-baca4211b08a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 23 features: Index(['Unnamed: 0', 'trans_date_trans_time', 'cc_num', 'merchant', 'category',\n","       'amt', 'first', 'last', 'gender', 'street', 'city', 'state', 'zip',\n","       'lat', 'long', 'city_pop', 'job', 'dob', 'trans_num', 'unix_time',\n","       'merch_lat', 'merch_long', 'is_fraud'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["data = data_train.head(5000)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":991},"id":"LOQ0LB29J-la","executionInfo":{"status":"ok","timestamp":1667957002326,"user_tz":-420,"elapsed":305,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"a10eb484-0047-493f-c649-ae40ff730765"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0 trans_date_trans_time            cc_num  \\\n","0              0   2019-01-01 00:00:18  2703186189652095   \n","1              1   2019-01-01 00:00:44      630423337322   \n","2              2   2019-01-01 00:00:51    38859492057661   \n","3              3   2019-01-01 00:01:16  3534093764340240   \n","4              4   2019-01-01 00:03:06   375534208663984   \n","...          ...                   ...               ...   \n","4995        4995   2019-01-04 05:09:49  2235335206132667   \n","4996        4996   2019-01-04 05:12:33   375237305371366   \n","4997        4997   2019-01-04 05:13:23  2235335206132667   \n","4998        4998   2019-01-04 05:14:46      502012776709   \n","4999        4999   2019-01-04 05:15:54  4010002218955876   \n","\n","                                merchant category      amt      first  \\\n","0             fraud_Rippin, Kub and Mann        m     4.97   Jennifer   \n","1        fraud_Heller, Gutmann and Zieme        g   107.23  Stephanie   \n","2                   fraud_Lind-Buckridge        e   220.11     Edward   \n","3     fraud_Kutch, Hermiston and Farrell        g    45.00     Jeremy   \n","4                    fraud_Keeling-Crist        m    41.96      Tyler   \n","...                                  ...      ...      ...        ...   \n","4995                     fraud_Lynch Ltd        s  1180.30      Maria   \n","4996                 fraud_Friesen-Stamm        g    83.47      David   \n","4997                   fraud_Paucek-Wiza        g    36.64      Maria   \n","4998                     fraud_Welch Inc        m     6.21     Sherry   \n","4999   fraud_Schoen, Kuphal and Nitzsche        g   224.88   Jennifer   \n","\n","          last gender                        street  ...      lat      long  \\\n","0        Banks      F                561 Perry Cove  ...  36.0788  -81.1781   \n","1         Gill      F  43039 Riley Greens Suite 393  ...  48.8878 -118.2105   \n","2      Sanchez      M      594 White Dale Suite 530  ...  42.1808 -112.2620   \n","3        White      M   9443 Cynthia Court Apt. 038  ...  46.2306 -112.1138   \n","4       Garcia      M              408 Bradley Rest  ...  38.4207  -79.4629   \n","...        ...    ...                           ...  ...      ...       ...   \n","4995   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4996  Erickson      M   616 Jimenez Meadow Apt. 701  ...  43.1128  -77.4906   \n","4997   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4998  Martinez      F         144 Yu Locks Apt. 754  ...  42.6315  -75.1866   \n","4999    Bishop      F            589 Matthew Brooks  ...  29.7972  -95.3288   \n","\n","      city_pop                                job         dob  \\\n","0         3495          Psychologist, counselling  1988-03-09   \n","1          149  Special educational needs teacher  1978-06-21   \n","2         4154        Nature conservation officer  1962-01-19   \n","3         1939                    Patent attorney  1967-01-12   \n","4           99     Dance movement psychotherapist  1986-03-28   \n","...        ...                                ...         ...   \n","4995      2089          Building control surveyor  1963-06-22   \n","4996      8019                       Retail buyer  1928-06-26   \n","4997      2089          Building control surveyor  1963-06-22   \n","4998       165                    Naval architect  1945-09-20   \n","4999   2906700                           Animator  1983-08-24   \n","\n","                             trans_num   unix_time  merch_lat  merch_long  \\\n","0     0b242abb623afc578575680df30655b9  1325376018  36.011293  -82.048315   \n","1     1f76529f8574734946361c461b024d99  1325376044  49.159047 -118.186462   \n","2     a1a22d70485983eac12b5b88dad1cf95  1325376051  43.150704 -112.154481   \n","3     6b849c168bdad6f867558c3793159a81  1325376076  47.034331 -112.561071   \n","4     a41d7549acf90789359a9aa5346dcb46  1325376186  38.674999  -78.632459   \n","...                                ...         ...        ...         ...   \n","4995  44827746427d28ce90c337b84cdad67c  1325653789  40.438221  -83.485925   \n","4996  51669b87249060cc80b9af943c9869af  1325653953  42.415407  -78.158282   \n","4997  eb74899e4d7095d2445ac4e4eb6ae473  1325654003  40.958936  -84.629338   \n","4998  eaf4f0819ce9a160401c14d462b942bf  1325654086  43.269532  -76.124026   \n","4999  c32f5657aa1de8c4223187aa07719b34  1325654154  30.581495  -95.989099   \n","\n","      is_fraud  \n","0            0  \n","1            0  \n","2            0  \n","3            0  \n","4            0  \n","...        ...  \n","4995         0  \n","4996         0  \n","4997         0  \n","4998         0  \n","4999         0  \n","\n","[5000 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-4a96ddb8-8191-44a0-80ee-8fabf63301d9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>trans_date_trans_time</th>\n","      <th>cc_num</th>\n","      <th>merchant</th>\n","      <th>category</th>\n","      <th>amt</th>\n","      <th>first</th>\n","      <th>last</th>\n","      <th>gender</th>\n","      <th>street</th>\n","      <th>...</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>city_pop</th>\n","      <th>job</th>\n","      <th>dob</th>\n","      <th>trans_num</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2019-01-01 00:00:18</td>\n","      <td>2703186189652095</td>\n","      <td>fraud_Rippin, Kub and Mann</td>\n","      <td>m</td>\n","      <td>4.97</td>\n","      <td>Jennifer</td>\n","      <td>Banks</td>\n","      <td>F</td>\n","      <td>561 Perry Cove</td>\n","      <td>...</td>\n","      <td>36.0788</td>\n","      <td>-81.1781</td>\n","      <td>3495</td>\n","      <td>Psychologist, counselling</td>\n","      <td>1988-03-09</td>\n","      <td>0b242abb623afc578575680df30655b9</td>\n","      <td>1325376018</td>\n","      <td>36.011293</td>\n","      <td>-82.048315</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2019-01-01 00:00:44</td>\n","      <td>630423337322</td>\n","      <td>fraud_Heller, Gutmann and Zieme</td>\n","      <td>g</td>\n","      <td>107.23</td>\n","      <td>Stephanie</td>\n","      <td>Gill</td>\n","      <td>F</td>\n","      <td>43039 Riley Greens Suite 393</td>\n","      <td>...</td>\n","      <td>48.8878</td>\n","      <td>-118.2105</td>\n","      <td>149</td>\n","      <td>Special educational needs teacher</td>\n","      <td>1978-06-21</td>\n","      <td>1f76529f8574734946361c461b024d99</td>\n","      <td>1325376044</td>\n","      <td>49.159047</td>\n","      <td>-118.186462</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-01-01 00:00:51</td>\n","      <td>38859492057661</td>\n","      <td>fraud_Lind-Buckridge</td>\n","      <td>e</td>\n","      <td>220.11</td>\n","      <td>Edward</td>\n","      <td>Sanchez</td>\n","      <td>M</td>\n","      <td>594 White Dale Suite 530</td>\n","      <td>...</td>\n","      <td>42.1808</td>\n","      <td>-112.2620</td>\n","      <td>4154</td>\n","      <td>Nature conservation officer</td>\n","      <td>1962-01-19</td>\n","      <td>a1a22d70485983eac12b5b88dad1cf95</td>\n","      <td>1325376051</td>\n","      <td>43.150704</td>\n","      <td>-112.154481</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-01-01 00:01:16</td>\n","      <td>3534093764340240</td>\n","      <td>fraud_Kutch, Hermiston and Farrell</td>\n","      <td>g</td>\n","      <td>45.00</td>\n","      <td>Jeremy</td>\n","      <td>White</td>\n","      <td>M</td>\n","      <td>9443 Cynthia Court Apt. 038</td>\n","      <td>...</td>\n","      <td>46.2306</td>\n","      <td>-112.1138</td>\n","      <td>1939</td>\n","      <td>Patent attorney</td>\n","      <td>1967-01-12</td>\n","      <td>6b849c168bdad6f867558c3793159a81</td>\n","      <td>1325376076</td>\n","      <td>47.034331</td>\n","      <td>-112.561071</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-01-01 00:03:06</td>\n","      <td>375534208663984</td>\n","      <td>fraud_Keeling-Crist</td>\n","      <td>m</td>\n","      <td>41.96</td>\n","      <td>Tyler</td>\n","      <td>Garcia</td>\n","      <td>M</td>\n","      <td>408 Bradley Rest</td>\n","      <td>...</td>\n","      <td>38.4207</td>\n","      <td>-79.4629</td>\n","      <td>99</td>\n","      <td>Dance movement psychotherapist</td>\n","      <td>1986-03-28</td>\n","      <td>a41d7549acf90789359a9aa5346dcb46</td>\n","      <td>1325376186</td>\n","      <td>38.674999</td>\n","      <td>-78.632459</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>4995</td>\n","      <td>2019-01-04 05:09:49</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Lynch Ltd</td>\n","      <td>s</td>\n","      <td>1180.30</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>44827746427d28ce90c337b84cdad67c</td>\n","      <td>1325653789</td>\n","      <td>40.438221</td>\n","      <td>-83.485925</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>4996</td>\n","      <td>2019-01-04 05:12:33</td>\n","      <td>375237305371366</td>\n","      <td>fraud_Friesen-Stamm</td>\n","      <td>g</td>\n","      <td>83.47</td>\n","      <td>David</td>\n","      <td>Erickson</td>\n","      <td>M</td>\n","      <td>616 Jimenez Meadow Apt. 701</td>\n","      <td>...</td>\n","      <td>43.1128</td>\n","      <td>-77.4906</td>\n","      <td>8019</td>\n","      <td>Retail buyer</td>\n","      <td>1928-06-26</td>\n","      <td>51669b87249060cc80b9af943c9869af</td>\n","      <td>1325653953</td>\n","      <td>42.415407</td>\n","      <td>-78.158282</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>4997</td>\n","      <td>2019-01-04 05:13:23</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Paucek-Wiza</td>\n","      <td>g</td>\n","      <td>36.64</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>eb74899e4d7095d2445ac4e4eb6ae473</td>\n","      <td>1325654003</td>\n","      <td>40.958936</td>\n","      <td>-84.629338</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>4998</td>\n","      <td>2019-01-04 05:14:46</td>\n","      <td>502012776709</td>\n","      <td>fraud_Welch Inc</td>\n","      <td>m</td>\n","      <td>6.21</td>\n","      <td>Sherry</td>\n","      <td>Martinez</td>\n","      <td>F</td>\n","      <td>144 Yu Locks Apt. 754</td>\n","      <td>...</td>\n","      <td>42.6315</td>\n","      <td>-75.1866</td>\n","      <td>165</td>\n","      <td>Naval architect</td>\n","      <td>1945-09-20</td>\n","      <td>eaf4f0819ce9a160401c14d462b942bf</td>\n","      <td>1325654086</td>\n","      <td>43.269532</td>\n","      <td>-76.124026</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>4999</td>\n","      <td>2019-01-04 05:15:54</td>\n","      <td>4010002218955876</td>\n","      <td>fraud_Schoen, Kuphal and Nitzsche</td>\n","      <td>g</td>\n","      <td>224.88</td>\n","      <td>Jennifer</td>\n","      <td>Bishop</td>\n","      <td>F</td>\n","      <td>589 Matthew Brooks</td>\n","      <td>...</td>\n","      <td>29.7972</td>\n","      <td>-95.3288</td>\n","      <td>2906700</td>\n","      <td>Animator</td>\n","      <td>1983-08-24</td>\n","      <td>c32f5657aa1de8c4223187aa07719b34</td>\n","      <td>1325654154</td>\n","      <td>30.581495</td>\n","      <td>-95.989099</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a96ddb8-8191-44a0-80ee-8fabf63301d9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4a96ddb8-8191-44a0-80ee-8fabf63301d9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4a96ddb8-8191-44a0-80ee-8fabf63301d9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["data.drop(columns=['Unnamed: 0', 'merch_long', 'merch_lat','cc_num','first','last','city','trans_num','city_pop','dob','unix_time','trans_date_trans_time', 'street','merchant','job', 'is_fraud'], inplace=True)\n"],"metadata":{"id":"BqP5-NI8V1Sw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954661784,"user_tz":-420,"elapsed":10,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"9986aa75-61dc-4d64-b374-19a561c4ad6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4913: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"]}]},{"cell_type":"code","source":["!pip install --upgrade category_encoders"],"metadata":{"id":"rtZSw4t7KNgi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954666461,"user_tz":-420,"elapsed":4684,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"44f755b7-59f6-4974-8522-745333c790ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting category_encoders\n","  Downloading category_encoders-2.5.1.post0-py2.py3-none-any.whl (72 kB)\n","\u001b[K     |████████████████████████████████| 72 kB 684 kB/s \n","\u001b[?25hRequirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.0.2)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.21.6)\n","Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.12.2)\n","Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.5.3)\n","Requirement already satisfied: pandas>=1.0.5 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.3.5)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.7.3)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.5->category_encoders) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.5->category_encoders) (2022.6)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from patsy>=0.5.1->category_encoders) (1.15.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->category_encoders) (3.1.0)\n","Installing collected packages: category-encoders\n","Successfully installed category-encoders-2.5.1.post0\n"]}]},{"cell_type":"code","source":["import category_encoders as ce\n","from sklearn.preprocessing import StandardScaler\n","encoder = ce.OneHotEncoder(handle_unknown=\"ignore\")\n","scaler = StandardScaler()\n"],"metadata":{"id":"XdNdmaCjUUiZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['category'] = data['category'].apply(lambda x: x[0])"],"metadata":{"id":"bIzQvc5HYomT","executionInfo":{"status":"ok","timestamp":1667954667125,"user_tz":-420,"elapsed":32,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"14bd3a86-9406-49c6-ac92-46f9fd193515"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["data = encoder.fit_transform(data)"],"metadata":{"id":"QE9KskZbZRw8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["COL = data.columns"],"metadata":{"id":"kPebGenYva0P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = scaler.fit_transform(data)"],"metadata":{"id":"FlfzEKowb6Bl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.DataFrame(data, columns=COL)"],"metadata":{"id":"JTbDc9S3b-OI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"id":"2enr4AaWwIvd","executionInfo":{"status":"ok","timestamp":1667954667686,"user_tz":-420,"elapsed":45,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"colab":{"base_uri":"https://localhost:8080/","height":300},"outputId":"d4a97f78-888a-4ead-d0d9-55a63264a21b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   category_1  category_2  category_3  category_4  category_5  category_6  \\\n","0    2.801706   -0.576734   -0.264098   -0.431555    -0.27139   -0.276453   \n","1   -0.356925    1.733900   -0.264098   -0.431555    -0.27139   -0.276453   \n","2   -0.356925   -0.576734    3.786479   -0.431555    -0.27139   -0.276453   \n","3   -0.356925    1.733900   -0.264098   -0.431555    -0.27139   -0.276453   \n","4    2.801706   -0.576734   -0.264098   -0.431555    -0.27139   -0.276453   \n","\n","   category_7  category_8  category_9       amt  ...  state_44  state_45  \\\n","0   -0.439679   -0.175863   -0.302037 -0.573994  ... -0.190445 -0.070888   \n","1   -0.439679   -0.175863   -0.302037  0.379489  ... -0.190445 -0.070888   \n","2   -0.439679   -0.175863   -0.302037  1.431994  ... -0.190445 -0.070888   \n","3   -0.439679   -0.175863   -0.302037 -0.200750  ... -0.190445 -0.070888   \n","4   -0.439679   -0.175863   -0.302037 -0.229096  ... -0.190445 -0.070888   \n","\n","   state_46  state_47  state_48  state_49  state_50       zip       lat  \\\n","0 -0.086343 -0.049049 -0.095298  -0.08151 -0.014144 -0.783754 -0.486329   \n","1 -0.086343 -0.049049 -0.095298  -0.08151 -0.014144  1.806426  2.018630   \n","2 -0.086343 -0.049049 -0.095298  -0.08151 -0.014144  1.222013  0.706993   \n","3 -0.086343 -0.049049 -0.095298  -0.08151 -0.014144  0.354285  1.498982   \n","4 -0.086343 -0.049049 -0.095298  -0.08151 -0.014144 -0.938821 -0.028342   \n","\n","       long  \n","0  0.670063  \n","1 -1.897721  \n","2 -1.485259  \n","3 -1.474983  \n","4  0.788993  \n","\n","[5 rows x 65 columns]"],"text/html":["\n","  <div id=\"df-29060d4e-6cd3-4a93-9c40-eea42e3a4bcc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>category_1</th>\n","      <th>category_2</th>\n","      <th>category_3</th>\n","      <th>category_4</th>\n","      <th>category_5</th>\n","      <th>category_6</th>\n","      <th>category_7</th>\n","      <th>category_8</th>\n","      <th>category_9</th>\n","      <th>amt</th>\n","      <th>...</th>\n","      <th>state_44</th>\n","      <th>state_45</th>\n","      <th>state_46</th>\n","      <th>state_47</th>\n","      <th>state_48</th>\n","      <th>state_49</th>\n","      <th>state_50</th>\n","      <th>zip</th>\n","      <th>lat</th>\n","      <th>long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.801706</td>\n","      <td>-0.576734</td>\n","      <td>-0.264098</td>\n","      <td>-0.431555</td>\n","      <td>-0.27139</td>\n","      <td>-0.276453</td>\n","      <td>-0.439679</td>\n","      <td>-0.175863</td>\n","      <td>-0.302037</td>\n","      <td>-0.573994</td>\n","      <td>...</td>\n","      <td>-0.190445</td>\n","      <td>-0.070888</td>\n","      <td>-0.086343</td>\n","      <td>-0.049049</td>\n","      <td>-0.095298</td>\n","      <td>-0.08151</td>\n","      <td>-0.014144</td>\n","      <td>-0.783754</td>\n","      <td>-0.486329</td>\n","      <td>0.670063</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.356925</td>\n","      <td>1.733900</td>\n","      <td>-0.264098</td>\n","      <td>-0.431555</td>\n","      <td>-0.27139</td>\n","      <td>-0.276453</td>\n","      <td>-0.439679</td>\n","      <td>-0.175863</td>\n","      <td>-0.302037</td>\n","      <td>0.379489</td>\n","      <td>...</td>\n","      <td>-0.190445</td>\n","      <td>-0.070888</td>\n","      <td>-0.086343</td>\n","      <td>-0.049049</td>\n","      <td>-0.095298</td>\n","      <td>-0.08151</td>\n","      <td>-0.014144</td>\n","      <td>1.806426</td>\n","      <td>2.018630</td>\n","      <td>-1.897721</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.356925</td>\n","      <td>-0.576734</td>\n","      <td>3.786479</td>\n","      <td>-0.431555</td>\n","      <td>-0.27139</td>\n","      <td>-0.276453</td>\n","      <td>-0.439679</td>\n","      <td>-0.175863</td>\n","      <td>-0.302037</td>\n","      <td>1.431994</td>\n","      <td>...</td>\n","      <td>-0.190445</td>\n","      <td>-0.070888</td>\n","      <td>-0.086343</td>\n","      <td>-0.049049</td>\n","      <td>-0.095298</td>\n","      <td>-0.08151</td>\n","      <td>-0.014144</td>\n","      <td>1.222013</td>\n","      <td>0.706993</td>\n","      <td>-1.485259</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.356925</td>\n","      <td>1.733900</td>\n","      <td>-0.264098</td>\n","      <td>-0.431555</td>\n","      <td>-0.27139</td>\n","      <td>-0.276453</td>\n","      <td>-0.439679</td>\n","      <td>-0.175863</td>\n","      <td>-0.302037</td>\n","      <td>-0.200750</td>\n","      <td>...</td>\n","      <td>-0.190445</td>\n","      <td>-0.070888</td>\n","      <td>-0.086343</td>\n","      <td>-0.049049</td>\n","      <td>-0.095298</td>\n","      <td>-0.08151</td>\n","      <td>-0.014144</td>\n","      <td>0.354285</td>\n","      <td>1.498982</td>\n","      <td>-1.474983</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.801706</td>\n","      <td>-0.576734</td>\n","      <td>-0.264098</td>\n","      <td>-0.431555</td>\n","      <td>-0.27139</td>\n","      <td>-0.276453</td>\n","      <td>-0.439679</td>\n","      <td>-0.175863</td>\n","      <td>-0.302037</td>\n","      <td>-0.229096</td>\n","      <td>...</td>\n","      <td>-0.190445</td>\n","      <td>-0.070888</td>\n","      <td>-0.086343</td>\n","      <td>-0.049049</td>\n","      <td>-0.095298</td>\n","      <td>-0.08151</td>\n","      <td>-0.014144</td>\n","      <td>-0.938821</td>\n","      <td>-0.028342</td>\n","      <td>0.788993</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 65 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29060d4e-6cd3-4a93-9c40-eea42e3a4bcc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29060d4e-6cd3-4a93-9c40-eea42e3a4bcc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29060d4e-6cd3-4a93-9c40-eea42e3a4bcc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = data\n","y = data_train.head(5000)['is_fraud']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"],"metadata":{"id":"v89Fa2yQwKKu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# without NLTK\n"],"metadata":{"id":"x3Qcn4TZ9rqx"}},{"cell_type":"code","source":["data_n = data_train.head(5000)\n","data_n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":991},"id":"BkAcLVCdc_5J","executionInfo":{"status":"ok","timestamp":1667956971971,"user_tz":-420,"elapsed":8,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"3a2fd325-c388-4ef6-91ac-72b72a2921c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0 trans_date_trans_time            cc_num  \\\n","0              0   2019-01-01 00:00:18  2703186189652095   \n","1              1   2019-01-01 00:00:44      630423337322   \n","2              2   2019-01-01 00:00:51    38859492057661   \n","3              3   2019-01-01 00:01:16  3534093764340240   \n","4              4   2019-01-01 00:03:06   375534208663984   \n","...          ...                   ...               ...   \n","4995        4995   2019-01-04 05:09:49  2235335206132667   \n","4996        4996   2019-01-04 05:12:33   375237305371366   \n","4997        4997   2019-01-04 05:13:23  2235335206132667   \n","4998        4998   2019-01-04 05:14:46      502012776709   \n","4999        4999   2019-01-04 05:15:54  4010002218955876   \n","\n","                                merchant category      amt      first  \\\n","0             fraud_Rippin, Kub and Mann        m     4.97   Jennifer   \n","1        fraud_Heller, Gutmann and Zieme        g   107.23  Stephanie   \n","2                   fraud_Lind-Buckridge        e   220.11     Edward   \n","3     fraud_Kutch, Hermiston and Farrell        g    45.00     Jeremy   \n","4                    fraud_Keeling-Crist        m    41.96      Tyler   \n","...                                  ...      ...      ...        ...   \n","4995                     fraud_Lynch Ltd        s  1180.30      Maria   \n","4996                 fraud_Friesen-Stamm        g    83.47      David   \n","4997                   fraud_Paucek-Wiza        g    36.64      Maria   \n","4998                     fraud_Welch Inc        m     6.21     Sherry   \n","4999   fraud_Schoen, Kuphal and Nitzsche        g   224.88   Jennifer   \n","\n","          last gender                        street  ...      lat      long  \\\n","0        Banks      F                561 Perry Cove  ...  36.0788  -81.1781   \n","1         Gill      F  43039 Riley Greens Suite 393  ...  48.8878 -118.2105   \n","2      Sanchez      M      594 White Dale Suite 530  ...  42.1808 -112.2620   \n","3        White      M   9443 Cynthia Court Apt. 038  ...  46.2306 -112.1138   \n","4       Garcia      M              408 Bradley Rest  ...  38.4207  -79.4629   \n","...        ...    ...                           ...  ...      ...       ...   \n","4995   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4996  Erickson      M   616 Jimenez Meadow Apt. 701  ...  43.1128  -77.4906   \n","4997   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4998  Martinez      F         144 Yu Locks Apt. 754  ...  42.6315  -75.1866   \n","4999    Bishop      F            589 Matthew Brooks  ...  29.7972  -95.3288   \n","\n","      city_pop                                job         dob  \\\n","0         3495          Psychologist, counselling  1988-03-09   \n","1          149  Special educational needs teacher  1978-06-21   \n","2         4154        Nature conservation officer  1962-01-19   \n","3         1939                    Patent attorney  1967-01-12   \n","4           99     Dance movement psychotherapist  1986-03-28   \n","...        ...                                ...         ...   \n","4995      2089          Building control surveyor  1963-06-22   \n","4996      8019                       Retail buyer  1928-06-26   \n","4997      2089          Building control surveyor  1963-06-22   \n","4998       165                    Naval architect  1945-09-20   \n","4999   2906700                           Animator  1983-08-24   \n","\n","                             trans_num   unix_time  merch_lat  merch_long  \\\n","0     0b242abb623afc578575680df30655b9  1325376018  36.011293  -82.048315   \n","1     1f76529f8574734946361c461b024d99  1325376044  49.159047 -118.186462   \n","2     a1a22d70485983eac12b5b88dad1cf95  1325376051  43.150704 -112.154481   \n","3     6b849c168bdad6f867558c3793159a81  1325376076  47.034331 -112.561071   \n","4     a41d7549acf90789359a9aa5346dcb46  1325376186  38.674999  -78.632459   \n","...                                ...         ...        ...         ...   \n","4995  44827746427d28ce90c337b84cdad67c  1325653789  40.438221  -83.485925   \n","4996  51669b87249060cc80b9af943c9869af  1325653953  42.415407  -78.158282   \n","4997  eb74899e4d7095d2445ac4e4eb6ae473  1325654003  40.958936  -84.629338   \n","4998  eaf4f0819ce9a160401c14d462b942bf  1325654086  43.269532  -76.124026   \n","4999  c32f5657aa1de8c4223187aa07719b34  1325654154  30.581495  -95.989099   \n","\n","      is_fraud  \n","0            0  \n","1            0  \n","2            0  \n","3            0  \n","4            0  \n","...        ...  \n","4995         0  \n","4996         0  \n","4997         0  \n","4998         0  \n","4999         0  \n","\n","[5000 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-84bea5ed-ffd5-4f7e-88bc-bd28a5dd1bfa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>trans_date_trans_time</th>\n","      <th>cc_num</th>\n","      <th>merchant</th>\n","      <th>category</th>\n","      <th>amt</th>\n","      <th>first</th>\n","      <th>last</th>\n","      <th>gender</th>\n","      <th>street</th>\n","      <th>...</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>city_pop</th>\n","      <th>job</th>\n","      <th>dob</th>\n","      <th>trans_num</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2019-01-01 00:00:18</td>\n","      <td>2703186189652095</td>\n","      <td>fraud_Rippin, Kub and Mann</td>\n","      <td>m</td>\n","      <td>4.97</td>\n","      <td>Jennifer</td>\n","      <td>Banks</td>\n","      <td>F</td>\n","      <td>561 Perry Cove</td>\n","      <td>...</td>\n","      <td>36.0788</td>\n","      <td>-81.1781</td>\n","      <td>3495</td>\n","      <td>Psychologist, counselling</td>\n","      <td>1988-03-09</td>\n","      <td>0b242abb623afc578575680df30655b9</td>\n","      <td>1325376018</td>\n","      <td>36.011293</td>\n","      <td>-82.048315</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2019-01-01 00:00:44</td>\n","      <td>630423337322</td>\n","      <td>fraud_Heller, Gutmann and Zieme</td>\n","      <td>g</td>\n","      <td>107.23</td>\n","      <td>Stephanie</td>\n","      <td>Gill</td>\n","      <td>F</td>\n","      <td>43039 Riley Greens Suite 393</td>\n","      <td>...</td>\n","      <td>48.8878</td>\n","      <td>-118.2105</td>\n","      <td>149</td>\n","      <td>Special educational needs teacher</td>\n","      <td>1978-06-21</td>\n","      <td>1f76529f8574734946361c461b024d99</td>\n","      <td>1325376044</td>\n","      <td>49.159047</td>\n","      <td>-118.186462</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-01-01 00:00:51</td>\n","      <td>38859492057661</td>\n","      <td>fraud_Lind-Buckridge</td>\n","      <td>e</td>\n","      <td>220.11</td>\n","      <td>Edward</td>\n","      <td>Sanchez</td>\n","      <td>M</td>\n","      <td>594 White Dale Suite 530</td>\n","      <td>...</td>\n","      <td>42.1808</td>\n","      <td>-112.2620</td>\n","      <td>4154</td>\n","      <td>Nature conservation officer</td>\n","      <td>1962-01-19</td>\n","      <td>a1a22d70485983eac12b5b88dad1cf95</td>\n","      <td>1325376051</td>\n","      <td>43.150704</td>\n","      <td>-112.154481</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-01-01 00:01:16</td>\n","      <td>3534093764340240</td>\n","      <td>fraud_Kutch, Hermiston and Farrell</td>\n","      <td>g</td>\n","      <td>45.00</td>\n","      <td>Jeremy</td>\n","      <td>White</td>\n","      <td>M</td>\n","      <td>9443 Cynthia Court Apt. 038</td>\n","      <td>...</td>\n","      <td>46.2306</td>\n","      <td>-112.1138</td>\n","      <td>1939</td>\n","      <td>Patent attorney</td>\n","      <td>1967-01-12</td>\n","      <td>6b849c168bdad6f867558c3793159a81</td>\n","      <td>1325376076</td>\n","      <td>47.034331</td>\n","      <td>-112.561071</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-01-01 00:03:06</td>\n","      <td>375534208663984</td>\n","      <td>fraud_Keeling-Crist</td>\n","      <td>m</td>\n","      <td>41.96</td>\n","      <td>Tyler</td>\n","      <td>Garcia</td>\n","      <td>M</td>\n","      <td>408 Bradley Rest</td>\n","      <td>...</td>\n","      <td>38.4207</td>\n","      <td>-79.4629</td>\n","      <td>99</td>\n","      <td>Dance movement psychotherapist</td>\n","      <td>1986-03-28</td>\n","      <td>a41d7549acf90789359a9aa5346dcb46</td>\n","      <td>1325376186</td>\n","      <td>38.674999</td>\n","      <td>-78.632459</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>4995</td>\n","      <td>2019-01-04 05:09:49</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Lynch Ltd</td>\n","      <td>s</td>\n","      <td>1180.30</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>44827746427d28ce90c337b84cdad67c</td>\n","      <td>1325653789</td>\n","      <td>40.438221</td>\n","      <td>-83.485925</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>4996</td>\n","      <td>2019-01-04 05:12:33</td>\n","      <td>375237305371366</td>\n","      <td>fraud_Friesen-Stamm</td>\n","      <td>g</td>\n","      <td>83.47</td>\n","      <td>David</td>\n","      <td>Erickson</td>\n","      <td>M</td>\n","      <td>616 Jimenez Meadow Apt. 701</td>\n","      <td>...</td>\n","      <td>43.1128</td>\n","      <td>-77.4906</td>\n","      <td>8019</td>\n","      <td>Retail buyer</td>\n","      <td>1928-06-26</td>\n","      <td>51669b87249060cc80b9af943c9869af</td>\n","      <td>1325653953</td>\n","      <td>42.415407</td>\n","      <td>-78.158282</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>4997</td>\n","      <td>2019-01-04 05:13:23</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Paucek-Wiza</td>\n","      <td>g</td>\n","      <td>36.64</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>eb74899e4d7095d2445ac4e4eb6ae473</td>\n","      <td>1325654003</td>\n","      <td>40.958936</td>\n","      <td>-84.629338</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>4998</td>\n","      <td>2019-01-04 05:14:46</td>\n","      <td>502012776709</td>\n","      <td>fraud_Welch Inc</td>\n","      <td>m</td>\n","      <td>6.21</td>\n","      <td>Sherry</td>\n","      <td>Martinez</td>\n","      <td>F</td>\n","      <td>144 Yu Locks Apt. 754</td>\n","      <td>...</td>\n","      <td>42.6315</td>\n","      <td>-75.1866</td>\n","      <td>165</td>\n","      <td>Naval architect</td>\n","      <td>1945-09-20</td>\n","      <td>eaf4f0819ce9a160401c14d462b942bf</td>\n","      <td>1325654086</td>\n","      <td>43.269532</td>\n","      <td>-76.124026</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>4999</td>\n","      <td>2019-01-04 05:15:54</td>\n","      <td>4010002218955876</td>\n","      <td>fraud_Schoen, Kuphal and Nitzsche</td>\n","      <td>g</td>\n","      <td>224.88</td>\n","      <td>Jennifer</td>\n","      <td>Bishop</td>\n","      <td>F</td>\n","      <td>589 Matthew Brooks</td>\n","      <td>...</td>\n","      <td>29.7972</td>\n","      <td>-95.3288</td>\n","      <td>2906700</td>\n","      <td>Animator</td>\n","      <td>1983-08-24</td>\n","      <td>c32f5657aa1de8c4223187aa07719b34</td>\n","      <td>1325654154</td>\n","      <td>30.581495</td>\n","      <td>-95.989099</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84bea5ed-ffd5-4f7e-88bc-bd28a5dd1bfa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-84bea5ed-ffd5-4f7e-88bc-bd28a5dd1bfa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-84bea5ed-ffd5-4f7e-88bc-bd28a5dd1bfa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["data_n.head(5000)\n","data_n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":991},"id":"MGp01SQwgl8C","executionInfo":{"status":"ok","timestamp":1667956973281,"user_tz":-420,"elapsed":409,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"4c5e20e5-037a-48d1-c2bd-649f6d3696e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0 trans_date_trans_time            cc_num  \\\n","0              0   2019-01-01 00:00:18  2703186189652095   \n","1              1   2019-01-01 00:00:44      630423337322   \n","2              2   2019-01-01 00:00:51    38859492057661   \n","3              3   2019-01-01 00:01:16  3534093764340240   \n","4              4   2019-01-01 00:03:06   375534208663984   \n","...          ...                   ...               ...   \n","4995        4995   2019-01-04 05:09:49  2235335206132667   \n","4996        4996   2019-01-04 05:12:33   375237305371366   \n","4997        4997   2019-01-04 05:13:23  2235335206132667   \n","4998        4998   2019-01-04 05:14:46      502012776709   \n","4999        4999   2019-01-04 05:15:54  4010002218955876   \n","\n","                                merchant category      amt      first  \\\n","0             fraud_Rippin, Kub and Mann        m     4.97   Jennifer   \n","1        fraud_Heller, Gutmann and Zieme        g   107.23  Stephanie   \n","2                   fraud_Lind-Buckridge        e   220.11     Edward   \n","3     fraud_Kutch, Hermiston and Farrell        g    45.00     Jeremy   \n","4                    fraud_Keeling-Crist        m    41.96      Tyler   \n","...                                  ...      ...      ...        ...   \n","4995                     fraud_Lynch Ltd        s  1180.30      Maria   \n","4996                 fraud_Friesen-Stamm        g    83.47      David   \n","4997                   fraud_Paucek-Wiza        g    36.64      Maria   \n","4998                     fraud_Welch Inc        m     6.21     Sherry   \n","4999   fraud_Schoen, Kuphal and Nitzsche        g   224.88   Jennifer   \n","\n","          last gender                        street  ...      lat      long  \\\n","0        Banks      F                561 Perry Cove  ...  36.0788  -81.1781   \n","1         Gill      F  43039 Riley Greens Suite 393  ...  48.8878 -118.2105   \n","2      Sanchez      M      594 White Dale Suite 530  ...  42.1808 -112.2620   \n","3        White      M   9443 Cynthia Court Apt. 038  ...  46.2306 -112.1138   \n","4       Garcia      M              408 Bradley Rest  ...  38.4207  -79.4629   \n","...        ...    ...                           ...  ...      ...       ...   \n","4995   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4996  Erickson      M   616 Jimenez Meadow Apt. 701  ...  43.1128  -77.4906   \n","4997   Rosales      F  6611 Parrish Garden Apt. 428  ...  40.6072  -83.9585   \n","4998  Martinez      F         144 Yu Locks Apt. 754  ...  42.6315  -75.1866   \n","4999    Bishop      F            589 Matthew Brooks  ...  29.7972  -95.3288   \n","\n","      city_pop                                job         dob  \\\n","0         3495          Psychologist, counselling  1988-03-09   \n","1          149  Special educational needs teacher  1978-06-21   \n","2         4154        Nature conservation officer  1962-01-19   \n","3         1939                    Patent attorney  1967-01-12   \n","4           99     Dance movement psychotherapist  1986-03-28   \n","...        ...                                ...         ...   \n","4995      2089          Building control surveyor  1963-06-22   \n","4996      8019                       Retail buyer  1928-06-26   \n","4997      2089          Building control surveyor  1963-06-22   \n","4998       165                    Naval architect  1945-09-20   \n","4999   2906700                           Animator  1983-08-24   \n","\n","                             trans_num   unix_time  merch_lat  merch_long  \\\n","0     0b242abb623afc578575680df30655b9  1325376018  36.011293  -82.048315   \n","1     1f76529f8574734946361c461b024d99  1325376044  49.159047 -118.186462   \n","2     a1a22d70485983eac12b5b88dad1cf95  1325376051  43.150704 -112.154481   \n","3     6b849c168bdad6f867558c3793159a81  1325376076  47.034331 -112.561071   \n","4     a41d7549acf90789359a9aa5346dcb46  1325376186  38.674999  -78.632459   \n","...                                ...         ...        ...         ...   \n","4995  44827746427d28ce90c337b84cdad67c  1325653789  40.438221  -83.485925   \n","4996  51669b87249060cc80b9af943c9869af  1325653953  42.415407  -78.158282   \n","4997  eb74899e4d7095d2445ac4e4eb6ae473  1325654003  40.958936  -84.629338   \n","4998  eaf4f0819ce9a160401c14d462b942bf  1325654086  43.269532  -76.124026   \n","4999  c32f5657aa1de8c4223187aa07719b34  1325654154  30.581495  -95.989099   \n","\n","      is_fraud  \n","0            0  \n","1            0  \n","2            0  \n","3            0  \n","4            0  \n","...        ...  \n","4995         0  \n","4996         0  \n","4997         0  \n","4998         0  \n","4999         0  \n","\n","[5000 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-ffb2f9c4-f055-44c0-ab35-00cef5231ff4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>trans_date_trans_time</th>\n","      <th>cc_num</th>\n","      <th>merchant</th>\n","      <th>category</th>\n","      <th>amt</th>\n","      <th>first</th>\n","      <th>last</th>\n","      <th>gender</th>\n","      <th>street</th>\n","      <th>...</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>city_pop</th>\n","      <th>job</th>\n","      <th>dob</th>\n","      <th>trans_num</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2019-01-01 00:00:18</td>\n","      <td>2703186189652095</td>\n","      <td>fraud_Rippin, Kub and Mann</td>\n","      <td>m</td>\n","      <td>4.97</td>\n","      <td>Jennifer</td>\n","      <td>Banks</td>\n","      <td>F</td>\n","      <td>561 Perry Cove</td>\n","      <td>...</td>\n","      <td>36.0788</td>\n","      <td>-81.1781</td>\n","      <td>3495</td>\n","      <td>Psychologist, counselling</td>\n","      <td>1988-03-09</td>\n","      <td>0b242abb623afc578575680df30655b9</td>\n","      <td>1325376018</td>\n","      <td>36.011293</td>\n","      <td>-82.048315</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2019-01-01 00:00:44</td>\n","      <td>630423337322</td>\n","      <td>fraud_Heller, Gutmann and Zieme</td>\n","      <td>g</td>\n","      <td>107.23</td>\n","      <td>Stephanie</td>\n","      <td>Gill</td>\n","      <td>F</td>\n","      <td>43039 Riley Greens Suite 393</td>\n","      <td>...</td>\n","      <td>48.8878</td>\n","      <td>-118.2105</td>\n","      <td>149</td>\n","      <td>Special educational needs teacher</td>\n","      <td>1978-06-21</td>\n","      <td>1f76529f8574734946361c461b024d99</td>\n","      <td>1325376044</td>\n","      <td>49.159047</td>\n","      <td>-118.186462</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2019-01-01 00:00:51</td>\n","      <td>38859492057661</td>\n","      <td>fraud_Lind-Buckridge</td>\n","      <td>e</td>\n","      <td>220.11</td>\n","      <td>Edward</td>\n","      <td>Sanchez</td>\n","      <td>M</td>\n","      <td>594 White Dale Suite 530</td>\n","      <td>...</td>\n","      <td>42.1808</td>\n","      <td>-112.2620</td>\n","      <td>4154</td>\n","      <td>Nature conservation officer</td>\n","      <td>1962-01-19</td>\n","      <td>a1a22d70485983eac12b5b88dad1cf95</td>\n","      <td>1325376051</td>\n","      <td>43.150704</td>\n","      <td>-112.154481</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2019-01-01 00:01:16</td>\n","      <td>3534093764340240</td>\n","      <td>fraud_Kutch, Hermiston and Farrell</td>\n","      <td>g</td>\n","      <td>45.00</td>\n","      <td>Jeremy</td>\n","      <td>White</td>\n","      <td>M</td>\n","      <td>9443 Cynthia Court Apt. 038</td>\n","      <td>...</td>\n","      <td>46.2306</td>\n","      <td>-112.1138</td>\n","      <td>1939</td>\n","      <td>Patent attorney</td>\n","      <td>1967-01-12</td>\n","      <td>6b849c168bdad6f867558c3793159a81</td>\n","      <td>1325376076</td>\n","      <td>47.034331</td>\n","      <td>-112.561071</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2019-01-01 00:03:06</td>\n","      <td>375534208663984</td>\n","      <td>fraud_Keeling-Crist</td>\n","      <td>m</td>\n","      <td>41.96</td>\n","      <td>Tyler</td>\n","      <td>Garcia</td>\n","      <td>M</td>\n","      <td>408 Bradley Rest</td>\n","      <td>...</td>\n","      <td>38.4207</td>\n","      <td>-79.4629</td>\n","      <td>99</td>\n","      <td>Dance movement psychotherapist</td>\n","      <td>1986-03-28</td>\n","      <td>a41d7549acf90789359a9aa5346dcb46</td>\n","      <td>1325376186</td>\n","      <td>38.674999</td>\n","      <td>-78.632459</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>4995</td>\n","      <td>2019-01-04 05:09:49</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Lynch Ltd</td>\n","      <td>s</td>\n","      <td>1180.30</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>44827746427d28ce90c337b84cdad67c</td>\n","      <td>1325653789</td>\n","      <td>40.438221</td>\n","      <td>-83.485925</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>4996</td>\n","      <td>2019-01-04 05:12:33</td>\n","      <td>375237305371366</td>\n","      <td>fraud_Friesen-Stamm</td>\n","      <td>g</td>\n","      <td>83.47</td>\n","      <td>David</td>\n","      <td>Erickson</td>\n","      <td>M</td>\n","      <td>616 Jimenez Meadow Apt. 701</td>\n","      <td>...</td>\n","      <td>43.1128</td>\n","      <td>-77.4906</td>\n","      <td>8019</td>\n","      <td>Retail buyer</td>\n","      <td>1928-06-26</td>\n","      <td>51669b87249060cc80b9af943c9869af</td>\n","      <td>1325653953</td>\n","      <td>42.415407</td>\n","      <td>-78.158282</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>4997</td>\n","      <td>2019-01-04 05:13:23</td>\n","      <td>2235335206132667</td>\n","      <td>fraud_Paucek-Wiza</td>\n","      <td>g</td>\n","      <td>36.64</td>\n","      <td>Maria</td>\n","      <td>Rosales</td>\n","      <td>F</td>\n","      <td>6611 Parrish Garden Apt. 428</td>\n","      <td>...</td>\n","      <td>40.6072</td>\n","      <td>-83.9585</td>\n","      <td>2089</td>\n","      <td>Building control surveyor</td>\n","      <td>1963-06-22</td>\n","      <td>eb74899e4d7095d2445ac4e4eb6ae473</td>\n","      <td>1325654003</td>\n","      <td>40.958936</td>\n","      <td>-84.629338</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>4998</td>\n","      <td>2019-01-04 05:14:46</td>\n","      <td>502012776709</td>\n","      <td>fraud_Welch Inc</td>\n","      <td>m</td>\n","      <td>6.21</td>\n","      <td>Sherry</td>\n","      <td>Martinez</td>\n","      <td>F</td>\n","      <td>144 Yu Locks Apt. 754</td>\n","      <td>...</td>\n","      <td>42.6315</td>\n","      <td>-75.1866</td>\n","      <td>165</td>\n","      <td>Naval architect</td>\n","      <td>1945-09-20</td>\n","      <td>eaf4f0819ce9a160401c14d462b942bf</td>\n","      <td>1325654086</td>\n","      <td>43.269532</td>\n","      <td>-76.124026</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>4999</td>\n","      <td>2019-01-04 05:15:54</td>\n","      <td>4010002218955876</td>\n","      <td>fraud_Schoen, Kuphal and Nitzsche</td>\n","      <td>g</td>\n","      <td>224.88</td>\n","      <td>Jennifer</td>\n","      <td>Bishop</td>\n","      <td>F</td>\n","      <td>589 Matthew Brooks</td>\n","      <td>...</td>\n","      <td>29.7972</td>\n","      <td>-95.3288</td>\n","      <td>2906700</td>\n","      <td>Animator</td>\n","      <td>1983-08-24</td>\n","      <td>c32f5657aa1de8c4223187aa07719b34</td>\n","      <td>1325654154</td>\n","      <td>30.581495</td>\n","      <td>-95.989099</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffb2f9c4-f055-44c0-ab35-00cef5231ff4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ffb2f9c4-f055-44c0-ab35-00cef5231ff4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ffb2f9c4-f055-44c0-ab35-00cef5231ff4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["data_n['category'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2rWuqjlE-39n","executionInfo":{"status":"ok","timestamp":1667956974719,"user_tz":-420,"elapsed":10,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"0f5d42d1-db3d-4d3c-c985-66e7af9f31bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['m', 'g', 'e', 's', 'f', 'p', 'h', 't', 'k'], dtype=object)"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["data_n['category'] = data_n['category'].apply(lambda x: x[0])"],"metadata":{"id":"S6eK0I5bydWq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667956935363,"user_tz":-420,"elapsed":448,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"1ca4821a-7c55-4c40-bfef-6d9d038ea219"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["data_n['category'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PMPaxXHc-wmS","executionInfo":{"status":"ok","timestamp":1667956944672,"user_tz":-420,"elapsed":318,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"7af60845-5f74-4101-c60c-890cdf6d7532"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['m', 'g', 'e', 's', 'f', 'p', 'h', 't', 'k'], dtype=object)"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["import category_encoders as ce\n","from sklearn.preprocessing import StandardScaler\n","encoder = ce.OneHotEncoder(handle_unknown=\"ignore\")\n","scaler = StandardScaler()"],"metadata":{"id":"lldPX4ZJgu3p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_n = encoder.fit_transform(data_n)"],"metadata":{"id":"g5-0bQWxykRz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":505},"id":"fQ_R0hf9-NFk","executionInfo":{"status":"ok","timestamp":1667956801696,"user_tz":-420,"elapsed":12,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"fedec473-dc19-438c-b0f0-6b1c7424d164"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0  trans_date_trans_time_1  trans_date_trans_time_2  \\\n","0              0                        1                        0   \n","1              1                        0                        1   \n","2              2                        0                        0   \n","3              3                        0                        0   \n","4              4                        0                        0   \n","...          ...                      ...                      ...   \n","4995        4995                        0                        0   \n","4996        4996                        0                        0   \n","4997        4997                        0                        0   \n","4998        4998                        0                        0   \n","4999        4999                        0                        0   \n","\n","      trans_date_trans_time_3  trans_date_trans_time_4  \\\n","0                           0                        0   \n","1                           0                        0   \n","2                           1                        0   \n","3                           0                        1   \n","4                           0                        0   \n","...                       ...                      ...   \n","4995                        0                        0   \n","4996                        0                        0   \n","4997                        0                        0   \n","4998                        0                        0   \n","4999                        0                        0   \n","\n","      trans_date_trans_time_5  trans_date_trans_time_6  \\\n","0                           0                        0   \n","1                           0                        0   \n","2                           0                        0   \n","3                           0                        0   \n","4                           1                        0   \n","...                       ...                      ...   \n","4995                        0                        0   \n","4996                        0                        0   \n","4997                        0                        0   \n","4998                        0                        0   \n","4999                        0                        0   \n","\n","      trans_date_trans_time_7  trans_date_trans_time_8  \\\n","0                           0                        0   \n","1                           0                        0   \n","2                           0                        0   \n","3                           0                        0   \n","4                           0                        0   \n","...                       ...                      ...   \n","4995                        0                        0   \n","4996                        0                        0   \n","4997                        0                        0   \n","4998                        0                        0   \n","4999                        0                        0   \n","\n","      trans_date_trans_time_9  ...  trans_num_4995  trans_num_4996  \\\n","0                           0  ...               0               0   \n","1                           0  ...               0               0   \n","2                           0  ...               0               0   \n","3                           0  ...               0               0   \n","4                           0  ...               0               0   \n","...                       ...  ...             ...             ...   \n","4995                        0  ...               0               1   \n","4996                        0  ...               0               0   \n","4997                        0  ...               0               0   \n","4998                        0  ...               0               0   \n","4999                        0  ...               0               0   \n","\n","      trans_num_4997  trans_num_4998  trans_num_4999  trans_num_5000  \\\n","0                  0               0               0               0   \n","1                  0               0               0               0   \n","2                  0               0               0               0   \n","3                  0               0               0               0   \n","4                  0               0               0               0   \n","...              ...             ...             ...             ...   \n","4995               0               0               0               0   \n","4996               1               0               0               0   \n","4997               0               1               0               0   \n","4998               0               0               1               0   \n","4999               0               0               0               1   \n","\n","       unix_time  merch_lat  merch_long  is_fraud  \n","0     1325376018  36.011293  -82.048315         0  \n","1     1325376044  49.159047 -118.186462         0  \n","2     1325376051  43.150704 -112.154481         0  \n","3     1325376076  47.034331 -112.561071         0  \n","4     1325376186  38.674999  -78.632459         0  \n","...          ...        ...         ...       ...  \n","4995  1325653789  40.438221  -83.485925         0  \n","4996  1325653953  42.415407  -78.158282         0  \n","4997  1325654003  40.958936  -84.629338         0  \n","4998  1325654086  43.269532  -76.124026         0  \n","4999  1325654154  30.581495  -95.989099         0  \n","\n","[5000 rows x 14494 columns]"],"text/html":["\n","  <div id=\"df-fbe6809a-a310-4cca-82f3-547ce59337ee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>trans_date_trans_time_1</th>\n","      <th>trans_date_trans_time_2</th>\n","      <th>trans_date_trans_time_3</th>\n","      <th>trans_date_trans_time_4</th>\n","      <th>trans_date_trans_time_5</th>\n","      <th>trans_date_trans_time_6</th>\n","      <th>trans_date_trans_time_7</th>\n","      <th>trans_date_trans_time_8</th>\n","      <th>trans_date_trans_time_9</th>\n","      <th>...</th>\n","      <th>trans_num_4995</th>\n","      <th>trans_num_4996</th>\n","      <th>trans_num_4997</th>\n","      <th>trans_num_4998</th>\n","      <th>trans_num_4999</th>\n","      <th>trans_num_5000</th>\n","      <th>unix_time</th>\n","      <th>merch_lat</th>\n","      <th>merch_long</th>\n","      <th>is_fraud</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325376018</td>\n","      <td>36.011293</td>\n","      <td>-82.048315</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325376044</td>\n","      <td>49.159047</td>\n","      <td>-118.186462</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325376051</td>\n","      <td>43.150704</td>\n","      <td>-112.154481</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325376076</td>\n","      <td>47.034331</td>\n","      <td>-112.561071</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325376186</td>\n","      <td>38.674999</td>\n","      <td>-78.632459</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>4995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325653789</td>\n","      <td>40.438221</td>\n","      <td>-83.485925</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>4996</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325653953</td>\n","      <td>42.415407</td>\n","      <td>-78.158282</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>4997</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1325654003</td>\n","      <td>40.958936</td>\n","      <td>-84.629338</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>4998</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1325654086</td>\n","      <td>43.269532</td>\n","      <td>-76.124026</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>4999</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1325654154</td>\n","      <td>30.581495</td>\n","      <td>-95.989099</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 14494 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbe6809a-a310-4cca-82f3-547ce59337ee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fbe6809a-a310-4cca-82f3-547ce59337ee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fbe6809a-a310-4cca-82f3-547ce59337ee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["data_n = scaler.fit_transform(data_n)"],"metadata":{"id":"5wYoev_5LwQ2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_n"],"metadata":{"id":"dmxsFzNgSmA4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667954675108,"user_tz":-420,"elapsed":21,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"6056c5f8-8f2a-4af8-ce7a-1ac2c9d80af3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.73170443e+00,  7.07036067e+01, -1.41435500e-02, ...,\n","        -4.97847055e-01,  6.08568449e-01, -6.64789106e-02],\n","       [-1.73101161e+00, -1.41435500e-02,  7.07036067e+01, ...,\n","         2.06098236e+00, -1.89499999e+00, -6.64789106e-02],\n","       [-1.73031879e+00, -1.41435500e-02, -1.41435500e-02, ...,\n","         8.91632460e-01, -1.47711810e+00, -6.64789106e-02],\n","       ...,\n","       [ 1.73031879e+00, -1.41435500e-02, -1.41435500e-02, ...,\n","         4.65068317e-01,  4.29761060e-01, -6.64789106e-02],\n","       [ 1.73101161e+00, -1.41435500e-02, -1.41435500e-02, ...,\n","         9.14758888e-01,  1.01898968e+00, -6.64789106e-02],\n","       [ 1.73170443e+00, -1.41435500e-02, -1.41435500e-02, ...,\n","        -1.55459993e+00, -3.57217284e-01, -6.64789106e-02]])"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["data_n.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJvPOeD7eh_4","executionInfo":{"status":"ok","timestamp":1667954675109,"user_tz":-420,"elapsed":19,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"e4d8c6d1-86c3-4d7f-9146-591d79325a80"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 14494)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X = data\n","y = data.head(5000)['is_fraud']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":524},"id":"o-OEWDhhc0d7","executionInfo":{"status":"error","timestamp":1667954800531,"user_tz":-420,"elapsed":310,"user":{"displayName":"Teng Solyta","userId":"10073220818848975188"}},"outputId":"91fab4f1-2172-4586-beb9-d1cb286b311b"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3360\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3361\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'is_fraud'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-56-1b56c61958ab>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5000\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'is_fraud'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3456\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3457\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3458\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3459\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3361\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3363\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3365\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'is_fraud'"]}]},{"cell_type":"code","source":["print(f'There are {len(data_n.columns)} features: {data_n.columns}')"],"metadata":{"id":"VnSdZs_GdzwF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_n = pd.DataFrame(data_n, columns=COL)"],"metadata":{"id":"UYSR3d3iL4s3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Data Modeling"],"metadata":{"id":"oOFnNwexorH2"}},{"cell_type":"code","source":["# choose a model\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","based_model = KNeighborsClassifier(n_neighbors=3)"],"metadata":{"id":"ZipYNTt8HArE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# train model\n","based_model.fit(X_train, y_train)"],"metadata":{"id":"v0yxDU_YHAug"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Evaluate the Model\n","based_model.score(X_test, y_test)"],"metadata":{"id":"8VeEzfgnHA2a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Parameter Tuning\n","from sklearn.model_selection import cross_val_score, GridSearchCV\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, confusion_matrix, precision_recall_fscore_support\n","import warnings\n","\n","warnings.filterwarnings('ignore')\n","\n","model_params = {\n","    # k-nearest neighbors algorithm\n","    'KNN' : {\n","        'model': KNeighborsClassifier(),\n","        'params' : {\n","            'n_neighbors' : [3, 4, 5, 6]\n","        }\n","    },\n","    # Support vector machines\n","    'SVM' : {\n","        'model': SVC(),\n","        'params' : {\n","            'gamma': [0.1,0.01,0.001],\n","            'C' : [5, 10, 15],\n","            'kernel' : ['rbf', 'linear', 'sigmoid']\n","        }\n","    },\n","    'Logistic Regression' : {\n","        'model': LogisticRegression(),\n","        'params': {\n","            'C': [5, 10, 15],\n","            'penalty': ['none', 'l2']\n","        }\n","    },\n","    'Decisiom Tree' : {\n","        'model': DecisionTreeClassifier(),\n","        'params': {\n","            'max_depth': [2, 3, 5, 10, 20],\n","            'min_samples_leaf': [5, 10, 20, 50, 100],\n","            'criterion': [\"gini\", \"entropy\"]\n","        }\n","    },\n","    'Random Forest' : {\n","        'model': RandomForestClassifier(),\n","        'params': {\n","            'n_estimators': [25,50,75,100],\n","            'max_features': ['auto', 'sqrt'],\n","            'max_depth': [10,15,20],\n","            'bootstrap': [True, False]\n","        }\n","    }\n","}"],"metadata":{"id":"pYP3lef_HA8j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn=KNeighborsClassifier(n_neighbors=3)\n","knn.fit(x_train,y_train)\n","print('knn accuracy :',knn.score(x_test,y_test))\n","# confisioun matrix\n","y_pred = knn.predict(x_test)\n","y_true = y_test\n","\n","# confisuon matrix\n","from sklearn.metrics import confusion_matrix\n","cm_knn = confusion_matrix(y_true,y_pred)"],"metadata":{"id":"5eFfJ_oQUzzH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["svm=SVC(random_state=1)\n","svm.fit(x_train,y_train)\n","print('svm accuracy :', svm.score(x_test,y_test))\n","\n","# confisuon matrix\n","y_pred = svm.predict(x_test)\n","y_true = y_test\n","from sklearn.metrics import confusion_matrix\n","\n","cm_svm = confusion_matrix(y_true,y_pred)"],"metadata":{"id":"8vN5qauaU0Oj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr=LogisticRegression(c=5)\n","lr.fit(x_train,y_train)\n","print('lr accuracy :', lr.score(x_test,y_test))\n","\n","# confusion matrix\n","y_pred = lr.predict(x_test)\n","y_true = y_test\n","from sklearn.metrics import confusion_matrix\n","\n","cm_lr = confusion_matrix(y_true,y_pred)"],"metadata":{"id":"AEBmgZ0-Uzm2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","dt=DecisionTreeClassifier()\n","dt.fit(x_train,y_train)\n","print('dt.accuracy : ', nb.score(x_test,y_test))\n","\n","# confisuon matrix\n","y_pred = dt.predict(x_test)\n","y_true = y_test\n","from sklearn.metrics import confusion_matrix\n","\n","cm_dt = confusion_matrix(y_true,y_pred)"],"metadata":{"id":"JSVnymkoU0c7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","rf=RandomForestClassifier()\n","rf.fit(x_train,y_train)\n","print('rf accuracy : ', rf.score(x_test,y_test))\n","\n","# confision matrix\n","y_pred = rf.predict(x_test)\n","y_true = y_test\n","from sklearn.metrics import confusion_matrix\n","\n","cm_rf = confusion_matrix(y_true,y_pred)"],"metadata":{"id":"Z3sPdjGtWCdO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(20,15))\n","\n","plt.suptitle(\"Confusion Matrixes\",fontsize=20)\n","\n","plt.subplot(2,3,1)\n","plt.title(\"Logistic Regression Confusion Matrix\")\n","sns.heatmap(cm_lr,cbar=False,annot=True,cmap=\"Greens\",fmt=\"d\")\n","\n","plt.subplot(2,3,2)\n","plt.title(\"K Nearest Neighbors Confusion Matrix\")\n","sns.heatmap(cm_knn,cbar=False,annot=True,cmap=\"Greens\",fmt=\"d\")\n","\n","plt.subplot(2,3,3)\n","plt.title(\"Support Vector Machine Confusion Matrix\")\n","sns.heatmap(cm_svm,cbar=False,annot=True,cmap=\"Greens\",fmt=\"d\")\n","\n","plt.subplot(2,3,5)\n","plt.title(\"Decision Tree Classifier Confusion Matrix\")\n","sns.heatmap(cm_dt,cbar=False,annot=True,cmap=\"Greens\",fmt=\"d\")\n","\n","plt.subplot(2,3,6)\n","plt.title(\"Random Forest Confusion Matrix\")\n","sns.heatmap(cm_rf,cbar=False,annot=True,cmap=\"Greens\",fmt=\"d\")\n","\n","plt.show()"],"metadata":{"id":"GUUmR8ENWCll"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scores = []\n","\n","for model_name, mp in model_params.items():\n","    model = GridSearchCV(mp['model'], mp['params'], cv=10, return_train_score=False)\n","    model.fit(X_train, y_train)\n","    scores.append({\n","        'model': model_name,\n","        'best_score': model.best_score_,\n","        'best_params': model.best_params_,\n","        'best_estimator': model.best_estimator_\n","    })\n","\n","df = pd.DataFrame(scores, columns=['model','best_score','best_params', 'best_estimator'])\n","df.sort_values('best_score', ascending=False, inplace=True)\n","df"],"metadata":{"id":"99JnLUc12NNX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.iloc[0]['best_params']"],"metadata":{"id":"oxiXTA2d856D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["final_model = RandomForestClassifier(\n","    bootstrap=True,\n","    max_depth=10,\n","    max_features='sqrt',\n","    n_estimators=25\n",")\n","final_model.fit(X_train, y_train)\n","final_model.score(X_test, y_test)"],"metadata":{"id":"L6nexNIqHBM5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Make Prediction"],"metadata":{"id":"T01aDXnV9gvI"}},{"cell_type":"code","source":["data_pred = encoder.inverse_transform(scaler.inverse_transform(X_test))\n","data_pred['predict_fraud'] = final_model.predict(X_test)"],"metadata":{"id":"LMQrKvW69Y1j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fraud_list = data_pred['predict_fraud'].to_list()\n","print(sum(fraud_list)/len(fraud_list))"],"metadata":{"id":"zcWGrMnVAwFX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_pred.index[data_pred['predict_fraud'] == 1]"],"metadata":{"id":"qqtQEA2IA58l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_pred.iloc[[0,1,2,3,4,95,147,652,1003,1312]]"],"metadata":{"id":"QG1t9lCxBLjD"},"execution_count":null,"outputs":[]}]}